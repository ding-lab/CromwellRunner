# TinDaisy2 template
# * complete workflow tindaisy2.cwl 
# * production optimizations

# YAML template as generated with cwltool --make-template

clinvar_annotation:  # type "File" (optional)
    class: File
    path: CLINVAR_ANNOTATION
rescue_clinvar: true  
rescue_cosmic: true  
call_regions:  # type "File" (optional)
    class: File
    path: CALL_REGIONS
canonical_BED:  # type "File"
    class: File
    path: CANONICAL_BED

normal_bam:
  class: File
  path: NORMAL_BAM
tumor_bam:
  class: File
  path: TUMOR_BAM
reference_fasta:
  class: File
  path: REF_PATH

# barcodes replace "TUMOR" and "NORMAL" as sample names in output MAF 
normal_barcode: NORMAL_BARCODE
tumor_barcode: TUMOR_BARCODE

# Caller config.  Note mutect does not have a caller config file
pindel_config:
  class: File
  path: PARAM_ROOT/caller_config/pindel.WGS.ini
strelka_config:
  class: File
  path: PARAM_ROOT/caller_config/strelka.WGS.ini
varscan_config:
  class: File
  path: PARAM_ROOT/caller_config/varscan.WGS.ini

# Other filter config
bypass_classification: true  # if false, exclude non-protein-coding variants.  recommend true for WGS, false for WXS
classification_config:
  class: File
  path: PARAM_ROOT/filter_config/classification_filter_config.ini
af_config:
  class: File
  path: PARAM_ROOT/filter_config/af_filter_config.ini

# Data files
centromere_bed: 
  class: File
  path: PARAM_ROOT/centromere/ucsc-centromere.GRCh38.bed

# VEP Cache is used for VEP annotation and vcf_2_maf.
# If not defined, online lookups will be used by VEP annotation. These are slower and do not include allele frequency info (MAX_AF) needed by AF filter.
# For performance reasons, defining vep_cache_gz is suggested for production systems
vep_cache_gz:
  class: File
  path: VEP_CACHE_GZ

chrlist: # Defining this turns on pindel parallel
  class: File
  path: CHRLIST

