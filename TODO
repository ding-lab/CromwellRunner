# Notes for future development

* Improve datatidy / runtidy 
  * make simple for running first time
  * Consolidate into one call
  * incorporate pre-staging to write inputs to scratch and post-staging to write outputs back to storage
* Improve parallel models
  * use job groups to control number jobs running on LSF systems
  * See importGDC as model: https://github.com/ding-lab/importGDC.CPTAC3.git
* Clean up layout to incorporate restarts and de novo runs


# Previous notes
Implement basic non-db functionality (so that datatidy can be used)
Improve error handling if database does not exist / is down / is not correctly defined
Update documentation with description of local database
Think through where runlog and datalog files go.  Currently in ./logs, probably not the best place
Allow prune step to use arbitrary configuration file to define which files kept

Have a sense of "batches" or "generations" of runs.  Currently, when some runs fail, even after they're finalized, 
    `cq` will report that they are still failed.  This is confusing if they are being re-run.  Having an idea of 
    batches, or recognizing that a run has been finalized, will be helpful.
    One idea is to report in `cq` output whether runs have been finalized


Do a sanity check in runtidy to see if a UUID was passed instead of a case name
exit with an error if so

get from VLD_FilterVCF/src/start_docker.sh
    https://github.com/ding-lab/VLD_FilterVCF

